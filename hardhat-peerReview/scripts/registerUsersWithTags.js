const hre = require("hardhat");

async function main() {
  // Define contract address and get its instance
  //const contractAddress = "0x5FbDB2315678afecb367f032d93F642f64180aa3"; // Replace with deployed contract address
  //const contractAddress = "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"; // PARALLEL TEST CONTRACT
  const contractAddress = "0x5FbDB2315678afecb367f032d93F642f64180aa3";
  const contract = await hre.ethers.getContractAt("PeerReview", contractAddress);

  // Field tags and user frequency distribution
  //BÜTÜN TESTLERİ BU SAYILARLA YAPTIK DA BUNLAR 50DEN FAZLA :d AŞAĞIYA ÇOKTAN KULLANDIĞIMIZ ERRORSUZ VERSİYONUNU YAZIYORUM
  /*const fieldDistribution = {
    "Life Sciences": 14,
    "Engineering": 11,
    "Physical Sciences": 5,
    "Social Sciences": 5,
    "Psychology": 4,
    "Health Sciences": 4,
    "Education": 3,
    "Mathematics & Computer Science": 3,
    "Humanities": 2,
    "Agricultural Sciences": 2,
  };*/

  const fieldDistribution = {
    "Life Sciences": 14,
    "Engineering": 11,
    "Physical Sciences": 5,
    "Social Sciences": 5,
    "Psychology": 4,
    "Health Sciences": 4,
    "Education": 3,
    "Mathematics & Computer Science": 3,
    "Humanities": 1,
  };


  // Retrieve accounts generated by Hardhat
  const accounts = await hre.ethers.getSigners();

  // Register users based on field distribution
  let userIndex = 0;
  for (const [field, count] of Object.entries(fieldDistribution)) {
    for (let i = 0; i < count; i++) {
        const user = accounts[userIndex];
        const userSigner = contract.connect(user); // Connect each user as a signer
        const tx = await userSigner.registerUser([field]); // Register with field as tag
        const userData = await contract.users(user.address); // Assuming `users` is the public mapping storing user data
        const reputation = userData.reputationScore;

        await tx.wait();
        console.log(`Registered user ${userIndex + 1}: ${user.address} with tag "${field}" , reputation: "${reputation}"`);
        userIndex++;
    }
  }

  console.log("All users registered successfully with assigned tags.");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
